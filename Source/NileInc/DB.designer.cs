#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NileInc
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NileInc")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEMP_MainData(EMP_MainData instance);
    partial void UpdateEMP_MainData(EMP_MainData instance);
    partial void DeleteEMP_MainData(EMP_MainData instance);
    partial void InsertREF_Degree(REF_Degree instance);
    partial void UpdateREF_Degree(REF_Degree instance);
    partial void DeleteREF_Degree(REF_Degree instance);
    partial void InsertREF_Department(REF_Department instance);
    partial void UpdateREF_Department(REF_Department instance);
    partial void DeleteREF_Department(REF_Department instance);
    partial void InsertEMP_AddAndDeduction(EMP_AddAndDeduction instance);
    partial void UpdateEMP_AddAndDeduction(EMP_AddAndDeduction instance);
    partial void DeleteEMP_AddAndDeduction(EMP_AddAndDeduction instance);
    partial void InsertEMP_NetSalary(EMP_NetSalary instance);
    partial void UpdateEMP_NetSalary(EMP_NetSalary instance);
    partial void DeleteEMP_NetSalary(EMP_NetSalary instance);
    partial void InsertEMP_Document(EMP_Document instance);
    partial void UpdateEMP_Document(EMP_Document instance);
    partial void DeleteEMP_Document(EMP_Document instance);
    partial void InsertUSR_LoginData(USR_LoginData instance);
    partial void UpdateUSR_LoginData(USR_LoginData instance);
    partial void DeleteUSR_LoginData(USR_LoginData instance);
    #endregion
		
		public DBDataContext() : 
				base(global::NileInc.Properties.Settings.Default.NileIncConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EMP_MainData> EMP_MainDatas
		{
			get
			{
				return this.GetTable<EMP_MainData>();
			}
		}
		
		public System.Data.Linq.Table<REF_Degree> REF_Degrees
		{
			get
			{
				return this.GetTable<REF_Degree>();
			}
		}
		
		public System.Data.Linq.Table<REF_Department> REF_Departments
		{
			get
			{
				return this.GetTable<REF_Department>();
			}
		}
		
		public System.Data.Linq.Table<EMP_AddAndDeduction> EMP_AddAndDeductions
		{
			get
			{
				return this.GetTable<EMP_AddAndDeduction>();
			}
		}
		
		public System.Data.Linq.Table<EMP_NetSalary> EMP_NetSalaries
		{
			get
			{
				return this.GetTable<EMP_NetSalary>();
			}
		}
		
		public System.Data.Linq.Table<EMP_Document> EMP_Documents
		{
			get
			{
				return this.GetTable<EMP_Document>();
			}
		}
		
		public System.Data.Linq.Table<USR_LoginData> USR_LoginDatas
		{
			get
			{
				return this.GetTable<USR_LoginData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMP_MainData")]
	public partial class EMP_MainData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.DateTime _BirthDate;
		
		private string _MobileNumber;
		
		private string _Address;
		
		private System.DateTime _JoinDate;
		
		private string _Notes;
		
		private string _PhotoPath;
		
		private int _DEP_ID;
		
		private int _DEG_ID;
		
		private EntitySet<EMP_AddAndDeduction> _EMP_AddAndDeductions;
		
		private EntitySet<EMP_NetSalary> _EMP_NetSalaries;
		
		private EntitySet<EMP_Document> _EMP_Documents;
		
		private EntityRef<REF_Degree> _REF_Degree;
		
		private EntityRef<REF_Department> _REF_Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBirthDateChanging(System.DateTime value);
    partial void OnBirthDateChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnJoinDateChanging(System.DateTime value);
    partial void OnJoinDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnPhotoPathChanging(string value);
    partial void OnPhotoPathChanged();
    partial void OnDEP_IDChanging(int value);
    partial void OnDEP_IDChanged();
    partial void OnDEG_IDChanging(int value);
    partial void OnDEG_IDChanged();
    #endregion
		
		public EMP_MainData()
		{
			this._EMP_AddAndDeductions = new EntitySet<EMP_AddAndDeduction>(new Action<EMP_AddAndDeduction>(this.attach_EMP_AddAndDeductions), new Action<EMP_AddAndDeduction>(this.detach_EMP_AddAndDeductions));
			this._EMP_NetSalaries = new EntitySet<EMP_NetSalary>(new Action<EMP_NetSalary>(this.attach_EMP_NetSalaries), new Action<EMP_NetSalary>(this.detach_EMP_NetSalaries));
			this._EMP_Documents = new EntitySet<EMP_Document>(new Action<EMP_Document>(this.attach_EMP_Documents), new Action<EMP_Document>(this.detach_EMP_Documents));
			this._REF_Degree = default(EntityRef<REF_Degree>);
			this._REF_Department = default(EntityRef<REF_Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date NOT NULL")]
		public System.DateTime BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(50)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="Date NOT NULL")]
		public System.DateTime JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoPath", DbType="NVarChar(MAX)")]
		public string PhotoPath
		{
			get
			{
				return this._PhotoPath;
			}
			set
			{
				if ((this._PhotoPath != value))
				{
					this.OnPhotoPathChanging(value);
					this.SendPropertyChanging();
					this._PhotoPath = value;
					this.SendPropertyChanged("PhotoPath");
					this.OnPhotoPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEP_ID", DbType="Int NOT NULL")]
		public int DEP_ID
		{
			get
			{
				return this._DEP_ID;
			}
			set
			{
				if ((this._DEP_ID != value))
				{
					if (this._REF_Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDEP_IDChanging(value);
					this.SendPropertyChanging();
					this._DEP_ID = value;
					this.SendPropertyChanged("DEP_ID");
					this.OnDEP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEG_ID", DbType="Int NOT NULL")]
		public int DEG_ID
		{
			get
			{
				return this._DEG_ID;
			}
			set
			{
				if ((this._DEG_ID != value))
				{
					if (this._REF_Degree.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDEG_IDChanging(value);
					this.SendPropertyChanging();
					this._DEG_ID = value;
					this.SendPropertyChanged("DEG_ID");
					this.OnDEG_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMP_MainData_EMP_AddAndDeduction", Storage="_EMP_AddAndDeductions", ThisKey="ID", OtherKey="EMP_ID")]
		public EntitySet<EMP_AddAndDeduction> EMP_AddAndDeductions
		{
			get
			{
				return this._EMP_AddAndDeductions;
			}
			set
			{
				this._EMP_AddAndDeductions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMP_MainData_EMP_NetSalary", Storage="_EMP_NetSalaries", ThisKey="ID", OtherKey="EMP_ID")]
		public EntitySet<EMP_NetSalary> EMP_NetSalaries
		{
			get
			{
				return this._EMP_NetSalaries;
			}
			set
			{
				this._EMP_NetSalaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMP_MainData_EMP_Document", Storage="_EMP_Documents", ThisKey="ID", OtherKey="EMP_ID")]
		public EntitySet<EMP_Document> EMP_Documents
		{
			get
			{
				return this._EMP_Documents;
			}
			set
			{
				this._EMP_Documents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REF_Degree_EMP_MainData", Storage="_REF_Degree", ThisKey="DEG_ID", OtherKey="ID", IsForeignKey=true)]
		public REF_Degree REF_Degree
		{
			get
			{
				return this._REF_Degree.Entity;
			}
			set
			{
				REF_Degree previousValue = this._REF_Degree.Entity;
				if (((previousValue != value) 
							|| (this._REF_Degree.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REF_Degree.Entity = null;
						previousValue.EMP_MainDatas.Remove(this);
					}
					this._REF_Degree.Entity = value;
					if ((value != null))
					{
						value.EMP_MainDatas.Add(this);
						this._DEG_ID = value.ID;
					}
					else
					{
						this._DEG_ID = default(int);
					}
					this.SendPropertyChanged("REF_Degree");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REF_Department_EMP_MainData", Storage="_REF_Department", ThisKey="DEP_ID", OtherKey="ID", IsForeignKey=true)]
		public REF_Department REF_Department
		{
			get
			{
				return this._REF_Department.Entity;
			}
			set
			{
				REF_Department previousValue = this._REF_Department.Entity;
				if (((previousValue != value) 
							|| (this._REF_Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REF_Department.Entity = null;
						previousValue.EMP_MainDatas.Remove(this);
					}
					this._REF_Department.Entity = value;
					if ((value != null))
					{
						value.EMP_MainDatas.Add(this);
						this._DEP_ID = value.ID;
					}
					else
					{
						this._DEP_ID = default(int);
					}
					this.SendPropertyChanged("REF_Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMP_AddAndDeductions(EMP_AddAndDeduction entity)
		{
			this.SendPropertyChanging();
			entity.EMP_MainData = this;
		}
		
		private void detach_EMP_AddAndDeductions(EMP_AddAndDeduction entity)
		{
			this.SendPropertyChanging();
			entity.EMP_MainData = null;
		}
		
		private void attach_EMP_NetSalaries(EMP_NetSalary entity)
		{
			this.SendPropertyChanging();
			entity.EMP_MainData = this;
		}
		
		private void detach_EMP_NetSalaries(EMP_NetSalary entity)
		{
			this.SendPropertyChanging();
			entity.EMP_MainData = null;
		}
		
		private void attach_EMP_Documents(EMP_Document entity)
		{
			this.SendPropertyChanging();
			entity.EMP_MainData = this;
		}
		
		private void detach_EMP_Documents(EMP_Document entity)
		{
			this.SendPropertyChanging();
			entity.EMP_MainData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REF_Degree")]
	public partial class REF_Degree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _DEP_ID;
		
		private string _Name;
		
		private decimal _BaseSalary;
		
		private decimal _Incentives;
		
		private decimal _StaticAdds;
		
		private string _Notes;
		
		private EntitySet<EMP_MainData> _EMP_MainDatas;
		
		private EntityRef<REF_Department> _REF_Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDEP_IDChanging(System.Nullable<int> value);
    partial void OnDEP_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBaseSalaryChanging(decimal value);
    partial void OnBaseSalaryChanged();
    partial void OnIncentivesChanging(decimal value);
    partial void OnIncentivesChanged();
    partial void OnStaticAddsChanging(decimal value);
    partial void OnStaticAddsChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public REF_Degree()
		{
			this._EMP_MainDatas = new EntitySet<EMP_MainData>(new Action<EMP_MainData>(this.attach_EMP_MainDatas), new Action<EMP_MainData>(this.detach_EMP_MainDatas));
			this._REF_Department = default(EntityRef<REF_Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEP_ID", DbType="Int")]
		public System.Nullable<int> DEP_ID
		{
			get
			{
				return this._DEP_ID;
			}
			set
			{
				if ((this._DEP_ID != value))
				{
					if (this._REF_Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDEP_IDChanging(value);
					this.SendPropertyChanging();
					this._DEP_ID = value;
					this.SendPropertyChanged("DEP_ID");
					this.OnDEP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseSalary", DbType="Decimal(18,2) NOT NULL")]
		public decimal BaseSalary
		{
			get
			{
				return this._BaseSalary;
			}
			set
			{
				if ((this._BaseSalary != value))
				{
					this.OnBaseSalaryChanging(value);
					this.SendPropertyChanging();
					this._BaseSalary = value;
					this.SendPropertyChanged("BaseSalary");
					this.OnBaseSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Incentives", DbType="Decimal(18,2) NOT NULL")]
		public decimal Incentives
		{
			get
			{
				return this._Incentives;
			}
			set
			{
				if ((this._Incentives != value))
				{
					this.OnIncentivesChanging(value);
					this.SendPropertyChanging();
					this._Incentives = value;
					this.SendPropertyChanged("Incentives");
					this.OnIncentivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticAdds", DbType="Decimal(18,2) NOT NULL")]
		public decimal StaticAdds
		{
			get
			{
				return this._StaticAdds;
			}
			set
			{
				if ((this._StaticAdds != value))
				{
					this.OnStaticAddsChanging(value);
					this.SendPropertyChanging();
					this._StaticAdds = value;
					this.SendPropertyChanged("StaticAdds");
					this.OnStaticAddsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REF_Degree_EMP_MainData", Storage="_EMP_MainDatas", ThisKey="ID", OtherKey="DEG_ID")]
		public EntitySet<EMP_MainData> EMP_MainDatas
		{
			get
			{
				return this._EMP_MainDatas;
			}
			set
			{
				this._EMP_MainDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REF_Department_REF_Degree", Storage="_REF_Department", ThisKey="DEP_ID", OtherKey="ID", IsForeignKey=true)]
		public REF_Department REF_Department
		{
			get
			{
				return this._REF_Department.Entity;
			}
			set
			{
				REF_Department previousValue = this._REF_Department.Entity;
				if (((previousValue != value) 
							|| (this._REF_Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REF_Department.Entity = null;
						previousValue.REF_Degrees.Remove(this);
					}
					this._REF_Department.Entity = value;
					if ((value != null))
					{
						value.REF_Degrees.Add(this);
						this._DEP_ID = value.ID;
					}
					else
					{
						this._DEP_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("REF_Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMP_MainDatas(EMP_MainData entity)
		{
			this.SendPropertyChanging();
			entity.REF_Degree = this;
		}
		
		private void detach_EMP_MainDatas(EMP_MainData entity)
		{
			this.SendPropertyChanging();
			entity.REF_Degree = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REF_Department")]
	public partial class REF_Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Notes;
		
		private EntitySet<EMP_MainData> _EMP_MainDatas;
		
		private EntitySet<REF_Degree> _REF_Degrees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public REF_Department()
		{
			this._EMP_MainDatas = new EntitySet<EMP_MainData>(new Action<EMP_MainData>(this.attach_EMP_MainDatas), new Action<EMP_MainData>(this.detach_EMP_MainDatas));
			this._REF_Degrees = new EntitySet<REF_Degree>(new Action<REF_Degree>(this.attach_REF_Degrees), new Action<REF_Degree>(this.detach_REF_Degrees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REF_Department_EMP_MainData", Storage="_EMP_MainDatas", ThisKey="ID", OtherKey="DEP_ID")]
		public EntitySet<EMP_MainData> EMP_MainDatas
		{
			get
			{
				return this._EMP_MainDatas;
			}
			set
			{
				this._EMP_MainDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REF_Department_REF_Degree", Storage="_REF_Degrees", ThisKey="ID", OtherKey="DEP_ID")]
		public EntitySet<REF_Degree> REF_Degrees
		{
			get
			{
				return this._REF_Degrees;
			}
			set
			{
				this._REF_Degrees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMP_MainDatas(EMP_MainData entity)
		{
			this.SendPropertyChanging();
			entity.REF_Department = this;
		}
		
		private void detach_EMP_MainDatas(EMP_MainData entity)
		{
			this.SendPropertyChanging();
			entity.REF_Department = null;
		}
		
		private void attach_REF_Degrees(REF_Degree entity)
		{
			this.SendPropertyChanging();
			entity.REF_Department = this;
		}
		
		private void detach_REF_Degrees(REF_Degree entity)
		{
			this.SendPropertyChanging();
			entity.REF_Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMP_AddAndDeduction")]
	public partial class EMP_AddAndDeduction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private bool _TypeAdd;
		
		private int _EMP_ID;
		
		private System.DateTime _Date;
		
		private decimal _Value;
		
		private bool _StaticValue;
		
		private bool _FromDay;
		
		private bool _FromMonth;
		
		private bool _FromIncentives;
		
		private decimal _RealValue;
		
		private string _Notes;
		
		private EntityRef<EMP_MainData> _EMP_MainData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeAddChanging(bool value);
    partial void OnTypeAddChanged();
    partial void OnEMP_IDChanging(int value);
    partial void OnEMP_IDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnValueChanging(decimal value);
    partial void OnValueChanged();
    partial void OnStaticValueChanging(bool value);
    partial void OnStaticValueChanged();
    partial void OnFromDayChanging(bool value);
    partial void OnFromDayChanged();
    partial void OnFromMonthChanging(bool value);
    partial void OnFromMonthChanged();
    partial void OnFromIncentivesChanging(bool value);
    partial void OnFromIncentivesChanged();
    partial void OnRealValueChanging(decimal value);
    partial void OnRealValueChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public EMP_AddAndDeduction()
		{
			this._EMP_MainData = default(EntityRef<EMP_MainData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeAdd", DbType="Bit NOT NULL")]
		public bool TypeAdd
		{
			get
			{
				return this._TypeAdd;
			}
			set
			{
				if ((this._TypeAdd != value))
				{
					this.OnTypeAddChanging(value);
					this.SendPropertyChanging();
					this._TypeAdd = value;
					this.SendPropertyChanged("TypeAdd");
					this.OnTypeAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_ID", DbType="Int NOT NULL")]
		public int EMP_ID
		{
			get
			{
				return this._EMP_ID;
			}
			set
			{
				if ((this._EMP_ID != value))
				{
					if (this._EMP_MainData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEMP_IDChanging(value);
					this.SendPropertyChanging();
					this._EMP_ID = value;
					this.SendPropertyChanged("EMP_ID");
					this.OnEMP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(18,2) NOT NULL")]
		public decimal Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticValue", DbType="Bit NOT NULL")]
		public bool StaticValue
		{
			get
			{
				return this._StaticValue;
			}
			set
			{
				if ((this._StaticValue != value))
				{
					this.OnStaticValueChanging(value);
					this.SendPropertyChanging();
					this._StaticValue = value;
					this.SendPropertyChanged("StaticValue");
					this.OnStaticValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDay", DbType="Bit NOT NULL")]
		public bool FromDay
		{
			get
			{
				return this._FromDay;
			}
			set
			{
				if ((this._FromDay != value))
				{
					this.OnFromDayChanging(value);
					this.SendPropertyChanging();
					this._FromDay = value;
					this.SendPropertyChanged("FromDay");
					this.OnFromDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMonth", DbType="Bit NOT NULL")]
		public bool FromMonth
		{
			get
			{
				return this._FromMonth;
			}
			set
			{
				if ((this._FromMonth != value))
				{
					this.OnFromMonthChanging(value);
					this.SendPropertyChanging();
					this._FromMonth = value;
					this.SendPropertyChanged("FromMonth");
					this.OnFromMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromIncentives", DbType="Bit NOT NULL")]
		public bool FromIncentives
		{
			get
			{
				return this._FromIncentives;
			}
			set
			{
				if ((this._FromIncentives != value))
				{
					this.OnFromIncentivesChanging(value);
					this.SendPropertyChanging();
					this._FromIncentives = value;
					this.SendPropertyChanged("FromIncentives");
					this.OnFromIncentivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealValue", DbType="Decimal(18,2) NOT NULL")]
		public decimal RealValue
		{
			get
			{
				return this._RealValue;
			}
			set
			{
				if ((this._RealValue != value))
				{
					this.OnRealValueChanging(value);
					this.SendPropertyChanging();
					this._RealValue = value;
					this.SendPropertyChanged("RealValue");
					this.OnRealValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMP_MainData_EMP_AddAndDeduction", Storage="_EMP_MainData", ThisKey="EMP_ID", OtherKey="ID", IsForeignKey=true)]
		public EMP_MainData EMP_MainData
		{
			get
			{
				return this._EMP_MainData.Entity;
			}
			set
			{
				EMP_MainData previousValue = this._EMP_MainData.Entity;
				if (((previousValue != value) 
							|| (this._EMP_MainData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMP_MainData.Entity = null;
						previousValue.EMP_AddAndDeductions.Remove(this);
					}
					this._EMP_MainData.Entity = value;
					if ((value != null))
					{
						value.EMP_AddAndDeductions.Add(this);
						this._EMP_ID = value.ID;
					}
					else
					{
						this._EMP_ID = default(int);
					}
					this.SendPropertyChanged("EMP_MainData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMP_NetSalary")]
	public partial class EMP_NetSalary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _EMP_ID;
		
		private System.DateTime _MonthDate;
		
		private decimal _BaseSalary;
		
		private decimal _Incentives;
		
		private decimal _StaticAdds;
		
		private decimal _AddOns;
		
		private decimal _Decuctions;
		
		private decimal _NetSalary;
		
		private EntityRef<EMP_MainData> _EMP_MainData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEMP_IDChanging(System.Nullable<int> value);
    partial void OnEMP_IDChanged();
    partial void OnMonthDateChanging(System.DateTime value);
    partial void OnMonthDateChanged();
    partial void OnBaseSalaryChanging(decimal value);
    partial void OnBaseSalaryChanged();
    partial void OnIncentivesChanging(decimal value);
    partial void OnIncentivesChanged();
    partial void OnStaticAddsChanging(decimal value);
    partial void OnStaticAddsChanged();
    partial void OnAddOnsChanging(decimal value);
    partial void OnAddOnsChanged();
    partial void OnDecuctionsChanging(decimal value);
    partial void OnDecuctionsChanged();
    partial void OnNetSalaryChanging(decimal value);
    partial void OnNetSalaryChanged();
    #endregion
		
		public EMP_NetSalary()
		{
			this._EMP_MainData = default(EntityRef<EMP_MainData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_ID", DbType="Int")]
		public System.Nullable<int> EMP_ID
		{
			get
			{
				return this._EMP_ID;
			}
			set
			{
				if ((this._EMP_ID != value))
				{
					if (this._EMP_MainData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEMP_IDChanging(value);
					this.SendPropertyChanging();
					this._EMP_ID = value;
					this.SendPropertyChanged("EMP_ID");
					this.OnEMP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthDate", DbType="Date NOT NULL")]
		public System.DateTime MonthDate
		{
			get
			{
				return this._MonthDate;
			}
			set
			{
				if ((this._MonthDate != value))
				{
					this.OnMonthDateChanging(value);
					this.SendPropertyChanging();
					this._MonthDate = value;
					this.SendPropertyChanged("MonthDate");
					this.OnMonthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseSalary", DbType="Decimal(18,2) NOT NULL")]
		public decimal BaseSalary
		{
			get
			{
				return this._BaseSalary;
			}
			set
			{
				if ((this._BaseSalary != value))
				{
					this.OnBaseSalaryChanging(value);
					this.SendPropertyChanging();
					this._BaseSalary = value;
					this.SendPropertyChanged("BaseSalary");
					this.OnBaseSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Incentives", DbType="Decimal(18,2) NOT NULL")]
		public decimal Incentives
		{
			get
			{
				return this._Incentives;
			}
			set
			{
				if ((this._Incentives != value))
				{
					this.OnIncentivesChanging(value);
					this.SendPropertyChanging();
					this._Incentives = value;
					this.SendPropertyChanged("Incentives");
					this.OnIncentivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticAdds", DbType="Decimal(18,2) NOT NULL")]
		public decimal StaticAdds
		{
			get
			{
				return this._StaticAdds;
			}
			set
			{
				if ((this._StaticAdds != value))
				{
					this.OnStaticAddsChanging(value);
					this.SendPropertyChanging();
					this._StaticAdds = value;
					this.SendPropertyChanged("StaticAdds");
					this.OnStaticAddsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddOns", DbType="Decimal(18,2) NOT NULL")]
		public decimal AddOns
		{
			get
			{
				return this._AddOns;
			}
			set
			{
				if ((this._AddOns != value))
				{
					this.OnAddOnsChanging(value);
					this.SendPropertyChanging();
					this._AddOns = value;
					this.SendPropertyChanged("AddOns");
					this.OnAddOnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Decuctions", DbType="Decimal(18,2) NOT NULL")]
		public decimal Decuctions
		{
			get
			{
				return this._Decuctions;
			}
			set
			{
				if ((this._Decuctions != value))
				{
					this.OnDecuctionsChanging(value);
					this.SendPropertyChanging();
					this._Decuctions = value;
					this.SendPropertyChanged("Decuctions");
					this.OnDecuctionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetSalary", DbType="Decimal(18,2) NOT NULL")]
		public decimal NetSalary
		{
			get
			{
				return this._NetSalary;
			}
			set
			{
				if ((this._NetSalary != value))
				{
					this.OnNetSalaryChanging(value);
					this.SendPropertyChanging();
					this._NetSalary = value;
					this.SendPropertyChanged("NetSalary");
					this.OnNetSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMP_MainData_EMP_NetSalary", Storage="_EMP_MainData", ThisKey="EMP_ID", OtherKey="ID", IsForeignKey=true)]
		public EMP_MainData EMP_MainData
		{
			get
			{
				return this._EMP_MainData.Entity;
			}
			set
			{
				EMP_MainData previousValue = this._EMP_MainData.Entity;
				if (((previousValue != value) 
							|| (this._EMP_MainData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMP_MainData.Entity = null;
						previousValue.EMP_NetSalaries.Remove(this);
					}
					this._EMP_MainData.Entity = value;
					if ((value != null))
					{
						value.EMP_NetSalaries.Add(this);
						this._EMP_ID = value.ID;
					}
					else
					{
						this._EMP_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EMP_MainData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMP_Document")]
	public partial class EMP_Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _EMP_ID;
		
		private string _DocName;
		
		private string _DocPath;
		
		private EntityRef<EMP_MainData> _EMP_MainData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEMP_IDChanging(int value);
    partial void OnEMP_IDChanged();
    partial void OnDocNameChanging(string value);
    partial void OnDocNameChanged();
    partial void OnDocPathChanging(string value);
    partial void OnDocPathChanged();
    #endregion
		
		public EMP_Document()
		{
			this._EMP_MainData = default(EntityRef<EMP_MainData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_ID", DbType="Int NOT NULL")]
		public int EMP_ID
		{
			get
			{
				return this._EMP_ID;
			}
			set
			{
				if ((this._EMP_ID != value))
				{
					if (this._EMP_MainData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEMP_IDChanging(value);
					this.SendPropertyChanging();
					this._EMP_ID = value;
					this.SendPropertyChanged("EMP_ID");
					this.OnEMP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocName", DbType="NVarChar(MAX)")]
		public string DocName
		{
			get
			{
				return this._DocName;
			}
			set
			{
				if ((this._DocName != value))
				{
					this.OnDocNameChanging(value);
					this.SendPropertyChanging();
					this._DocName = value;
					this.SendPropertyChanged("DocName");
					this.OnDocNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocPath", DbType="NVarChar(MAX)")]
		public string DocPath
		{
			get
			{
				return this._DocPath;
			}
			set
			{
				if ((this._DocPath != value))
				{
					this.OnDocPathChanging(value);
					this.SendPropertyChanging();
					this._DocPath = value;
					this.SendPropertyChanged("DocPath");
					this.OnDocPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMP_MainData_EMP_Document", Storage="_EMP_MainData", ThisKey="EMP_ID", OtherKey="ID", IsForeignKey=true)]
		public EMP_MainData EMP_MainData
		{
			get
			{
				return this._EMP_MainData.Entity;
			}
			set
			{
				EMP_MainData previousValue = this._EMP_MainData.Entity;
				if (((previousValue != value) 
							|| (this._EMP_MainData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMP_MainData.Entity = null;
						previousValue.EMP_Documents.Remove(this);
					}
					this._EMP_MainData.Entity = value;
					if ((value != null))
					{
						value.EMP_Documents.Add(this);
						this._EMP_ID = value.ID;
					}
					else
					{
						this._EMP_ID = default(int);
					}
					this.SendPropertyChanged("EMP_MainData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USR_LoginData")]
	public partial class USR_LoginData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _Password;
		
		private string _UserGuid;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _Permission;
		
		private string _Answer1;
		
		private string _Answer2;
		
		private string _Answer3;
		
		private string _Answer4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserGuidChanging(string value);
    partial void OnUserGuidChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnPermissionChanging(System.Nullable<int> value);
    partial void OnPermissionChanged();
    partial void OnAnswer1Changing(string value);
    partial void OnAnswer1Changed();
    partial void OnAnswer2Changing(string value);
    partial void OnAnswer2Changed();
    partial void OnAnswer3Changing(string value);
    partial void OnAnswer3Changed();
    partial void OnAnswer4Changing(string value);
    partial void OnAnswer4Changed();
    #endregion
		
		public USR_LoginData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGuid", DbType="NVarChar(50)")]
		public string UserGuid
		{
			get
			{
				return this._UserGuid;
			}
			set
			{
				if ((this._UserGuid != value))
				{
					this.OnUserGuidChanging(value);
					this.SendPropertyChanging();
					this._UserGuid = value;
					this.SendPropertyChanged("UserGuid");
					this.OnUserGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permission", DbType="Int")]
		public System.Nullable<int> Permission
		{
			get
			{
				return this._Permission;
			}
			set
			{
				if ((this._Permission != value))
				{
					this.OnPermissionChanging(value);
					this.SendPropertyChanging();
					this._Permission = value;
					this.SendPropertyChanged("Permission");
					this.OnPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer1", DbType="NVarChar(50)")]
		public string Answer1
		{
			get
			{
				return this._Answer1;
			}
			set
			{
				if ((this._Answer1 != value))
				{
					this.OnAnswer1Changing(value);
					this.SendPropertyChanging();
					this._Answer1 = value;
					this.SendPropertyChanged("Answer1");
					this.OnAnswer1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer2", DbType="NVarChar(50)")]
		public string Answer2
		{
			get
			{
				return this._Answer2;
			}
			set
			{
				if ((this._Answer2 != value))
				{
					this.OnAnswer2Changing(value);
					this.SendPropertyChanging();
					this._Answer2 = value;
					this.SendPropertyChanged("Answer2");
					this.OnAnswer2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer3", DbType="NVarChar(50)")]
		public string Answer3
		{
			get
			{
				return this._Answer3;
			}
			set
			{
				if ((this._Answer3 != value))
				{
					this.OnAnswer3Changing(value);
					this.SendPropertyChanging();
					this._Answer3 = value;
					this.SendPropertyChanged("Answer3");
					this.OnAnswer3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer4", DbType="NVarChar(50)")]
		public string Answer4
		{
			get
			{
				return this._Answer4;
			}
			set
			{
				if ((this._Answer4 != value))
				{
					this.OnAnswer4Changing(value);
					this.SendPropertyChanging();
					this._Answer4 = value;
					this.SendPropertyChanged("Answer4");
					this.OnAnswer4Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
